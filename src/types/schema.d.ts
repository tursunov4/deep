/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/catalogs/": {
    get: operations["catalogs_list"];
  };
  "/api/categories/": {
    get: operations["categories_list"];
  };
  "/api/categories/amount_of/": {
    get: operations["categories_amount_of_retrieve"];
  };
  "/api/categories/list-subcategories/": {
    post: operations["categories_list_subcategories_create"];
  };
  "/api/collections/{id}/": {
    get: operations["collections_retrieve"];
  };
  "/api/collections/amount_of/": {
    get: operations["collections_amount_of_retrieve"];
  };
  "/api/collections/featured/": {
    get: operations["collections_featured_retrieve"];
  };
  "/api/collections/list/": {
    get: operations["collections_list_list"];
  };
  "/api/door-page/covers/": {
    get: operations["door_page_covers_list"];
  };
  "/api/door-page/door_page/": {
    get: operations["door_page_door_page_retrieve"];
  };
  "/api/door-page/doors_combinations/": {
    get: operations["door_page_doors_combinations_list"];
  };
  "/api/door-page/doors_covers_combinations/": {
    get: operations["door_page_doors_covers_combinations_list"];
  };
  "/api/door-page/handler_locks/": {
    get: operations["door_page_handler_locks_list"];
  };
  "/api/door-page/locks/": {
    get: operations["door_page_locks_list"];
  };
  "/api/door_collections/": {
    get: operations["door_collections_retrieve"];
  };
  "/api/doors/": {
    get: operations["doors_list"];
  };
  "/api/doors/{id}/": {
    get: operations["doors_retrieve"];
  };
  "/api/inspiration/": {
    get: operations["inspiration_list"];
  };
  "/api/inspiration/{id}/": {
    get: operations["inspiration_retrieve"];
  };
  "/api/inspiration/count_pages/": {
    post: operations["inspiration_count_pages_create"];
  };
  "/api/inspiration/filter_list/": {
    get: operations["inspiration_filter_list_list"];
  };
  "/api/inspiration/next/{id}/": {
    get: operations["inspiration_next_retrieve"];
  };
  "/api/inspiration/open/{id}/": {
    get: operations["inspiration_open_retrieve"];
  };
  "/api/inspiration/page/{pag_num}/": {
    post: operations["inspiration_page_create"];
  };
  "/api/inspiration/prev/{id}/": {
    get: operations["inspiration_prev_retrieve"];
  };
  "/api/main/": {
    get: operations["main_list"];
  };
  "/api/main_catalog/": {
    get: operations["main_catalog_retrieve"];
  };
  "/api/main_tax/": {
    get: operations["main_tax_retrieve"];
  };
  "/api/main_video/": {
    get: operations["main_video_retrieve"];
  };
  "/api/new-subcategory/amount_of_pages/": {
    post: operations["new_subcategory_amount_of_pages_create"];
  };
  "/api/new-subcategory/amount_of_pages_mobile/": {
    post: operations["new_subcategory_amount_of_pages_mobile_create"];
  };
  "/api/new-subcategory/color_count/": {
    post: operations["new_subcategory_color_count_create"];
  };
  "/api/new-subcategory/page-mobile/{pag_num}/": {
    patch: operations["new_subcategory_page_mobile_partial_update"];
  };
  "/api/new-subcategory/page/{pag_num}/": {
    patch: operations["new_subcategory_page_partial_update"];
  };
  "/api/product/{id}/": {
    get: operations["product_retrieve"];
  };
  "/api/product/{id}/related_objs/": {
    get: operations["product_related_objs_list"];
  };
  "/api/product/{id}/same_collection/": {
    get: operations["product_same_collection_retrieve"];
  };
  "/api/product/amount_of_products/": {
    get: operations["product_amount_of_products_retrieve"];
  };
  "/api/product/count_colours/": {
    get: operations["product_count_colours_list"];
  };
  "/api/product/list_colours/": {
    get: operations["product_list_colours_list"];
  };
  "/api/product/new_products/": {
    get: operations["product_new_products_list"];
  };
  "/api/upload_order_pdf/": {
    post: operations["upload_order_pdf_create"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AbstractProduct: {
      id: number;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      colored_products: readonly components["schemas"]["Product"][];
      /**
       * Видео-установщик
       * Format: uri
       */
      installation_video?: string | null;
      eng_collection_name: string;
      rus_collection_name: string;
      eng_subcategory_name: string;
      rus_subcategory_name: string;
      eng_category_name: string;
      rus_category_name: string;
    };
    Author: {
      id: number;
      /** Имя автора (анг) */
      author_name: string;
      /** Имя автора (рус) */
      author_name_ru?: string;
      /**
       * Изображение
       * Format: uri
       */
      icon: string;
    };
    /**
     * @description * `4` - 4
     * * `3` - 3
     * @enum {integer}
     */
    AuthorsEnum: 4 | 3;
    BuildingType: {
      id: number;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      count_inspirations: string;
    };
    /**
     * @description * `10` - 10
     * * `11` - 11
     * @enum {integer}
     */
    BuildingTypeEnum: 10 | 11;
    Catalog: {
      id: number;
      /** Название (рус) */
      catalog_name_ru: string;
      /** Название (анг) */
      catalog_name_eng: string;
      subcatalogs: readonly components["schemas"]["SubcatalogSertializer"][];
    };
    Categories: {
      id: number;
      /**
       * Название (рус)
       * @description Название категории на русском языке
       */
      rus_name: string;
      /**
       * Название (анг)
       * @description Название категории на английском языке
       */
      eng_name: string;
    };
    CategoriesRequest: {
      /**
       * Название (рус)
       * @description Название категории на русском языке
       */
      rus_name: string;
      /**
       * Название (анг)
       * @description Название категории на английском языке
       */
      eng_name: string;
    };
    ColAbstract: {
      /** @default false */
      collection_type?: boolean;
      id: number;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      colored_products: readonly components["schemas"]["PreviewAbstract"][];
    };
    /**
     * @description * `1` - 1
     * * `2` - 2
     * @enum {integer}
     */
    CollectionsEnum: 1 | 2;
    Colour: {
      id: number;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      /**
       * Изображение
       * Format: uri
       */
      photo: string;
    };
    /**
     * @description * `5` - 5
     * * `4` - 4
     * * `3` - 3
     * * `6` - 6
     * * `2` - 2
     * * `14` - 14
     * * `13` - 13
     * @enum {integer}
     */
    ColoursEnum: 5 | 4 | 3 | 6 | 2 | 14 | 13;
    CountCIS: {
      id: number;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      count: number;
    };
    CountCategory: {
      id: number;
      /**
       * Название (рус)
       * @description Название подкатегории на русском языке
       */
      rus_name: string;
      /**
       * Название (анг)
       * @description Название подкатегории на английском языке
       */
      eng_name: string;
      product_counter: number;
    };
    CountCollection: {
      id: number;
      /**
       * Название (рус)
       * @description Название коллекции на русском языке
       */
      rus_name: string;
      /**
       * Название (анг)
       * @description Название коллекции на английском языке
       */
      eng_name: string;
      count: number;
    };
    CountColour: {
      id: number;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      count: number;
    };
    Cover: {
      id: number;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      /**
       * PDF (рус)
       * Format: uri
       */
      pdf_ru?: string | null;
      /**
       * PDF (анг)
       * Format: uri
       */
      pdf_eng?: string | null;
      /**
       * Изображение
       * Format: uri
       */
      image: string;
    };
    Door: {
      id: number;
      /** Идентификационный номер */
      id_code: string;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      /** Заголовок (рус) */
      rus_title: string;
      /** Заголовок (анг) */
      eng_title: string;
      /** Описание (рус) */
      rus_description: string;
      /** Описание (анг) */
      eng_description: string;
      /**
       * Цена товара (руб)
       * Format: double
       */
      rub_cost?: number | null;
      /**
       * Цена товара (евро)
       * Format: double
       */
      euro_cost: number;
      /**
       * Налог
       * Format: double
       */
      tax?: number | null;
      door_specifications: readonly components["schemas"]["DoorSpecification"][];
      door_images: readonly components["schemas"]["DoorImage"][];
      /**
       * Модель товара
       * Format: uri
       */
      drawing?: string | null;
      /**
       * PDF (анг)
       * Format: uri
       */
      en_pdf?: string | null;
      /** Название PDF файла (анг) */
      en_pdf_name?: string | null;
      /**
       * PDF (рус)
       * Format: uri
       */
      ru_pdf?: string | null;
      /** Название PDF файла (рус) */
      ru_pdf_name?: string | null;
      en_pdf_size_field: string;
      ru_pdf_size_field: string;
      locks_handles: readonly components["schemas"]["HandlerLock"][];
    };
    DoorCollections: {
      /**
       * PDF-файл
       * Format: uri
       */
      file?: string | null;
    };
    DoorCombinations: {
      id: number;
      /**
       * Обложка
       * Format: uri
       */
      banner: string;
      /** Название (верхний левый угол) (рус) */
      name_left_up_ru: string;
      /** Название (верхний левый угол) (анг) */
      name_left_up_eng: string;
      /**
       * Изображение (верхний левый угол)
       * Format: uri
       */
      image_left_up: string;
      /** Цена (руб) (верхний левый угол) */
      cost_rub_left_up?: string;
      /** Цена (евро) (верхний левый угол) */
      cost_eur_left_up?: string;
      /** Название (верхний правый угол) (рус) */
      name_right_up_ru: string;
      /** Название (верхний правый угол) (анг) */
      name_right_up_eng: string;
      /**
       * Изображение (верхний правый угол)
       * Format: uri
       */
      image_right_up: string;
      /** Цена (руб) (верхний правый угол) */
      cost_rub_right_up?: string;
      /** Цена (евро) (верхний правый угол) */
      cost_eur_right_up?: string;
      /** Название (левый нижний угол) (рус) */
      name_left_down_ru: string;
      /** Название (левый нижний угол) (анг) */
      name_left_down_eng: string;
      /**
       * Изображение (левый нижний угол)
       * Format: uri
       */
      image_left_down: string;
      /** Цена (руб) (левый нижний угол) */
      cost_rub_left_down?: string;
      /** Цена (евро) (левый нижний угол) */
      cost_eur_left_down?: string;
      /** Название (правый нижний угол) (рус) */
      name_right_down_ru: string;
      /** Название (правый нижний угол) (анг) */
      name_right_down_eng: string;
      /**
       * Изображение (правый нижний угол)
       * Format: uri
       */
      image_right_down: string;
      /** Цена (руб) (правый нижний угол) */
      cost_rub_right_down?: string;
      /** Цена (евро) (правый нижний угол) */
      cost_eur_right_down?: string;
      sort_order: number;
    };
    DoorCoverCombinationSerialiser: {
      id: number;
      /**
       * Изображение
       * Format: uri
       */
      image: string;
      /** Название (рус) */
      name_ru: string;
      /** Название (анг) */
      name_eng: string;
      /** Описание (рус) */
      description_ru?: string;
      /** Описание (анг) */
      description_eng?: string;
      sort_order: number;
    };
    DoorImage: {
      /**
       * Изображение
       * Format: uri
       */
      photo: string;
      /**
       * Маленькое изображение
       * Format: uri
       */
      crop_image?: string | null;
      /** Сделать главным */
      main_photo?: boolean;
    };
    DoorPage: {
      /** Название (анг) */
      eng_name?: string;
      /** Название (рус) */
      ru_name?: string;
      /** Заголовок (анг) */
      eng_title?: string;
      /** Заголовок (рус) */
      ru_title?: string;
      /**
       * Заголовок блока 'Комбинации' (рус)
       * @description Название секции комбинаци на русском языке
       */
      combination_title_name_ru?: string;
      /**
       * Заголовок блока 'Комбинации' (анг)
       * @description Название секции комбинаци
       */
      combination_title_name_eng?: string;
      /**
       * Заголовок блока 'Комбинации покрытий' (рус)
       * @description Название секции комбинаци покрытий
       */
      cover_combination_title_name_ru?: string;
      /**
       * Заголовок блока 'Комбинации покрытий' (анг)
       * @description Название секции комбинаци покрытий
       */
      cover_combination_title_name_eng?: string;
      /**
       * Заголовок блока 'Отделочные материалы для двери' (рус)
       * @description Название секции покрытий
       */
      cover_title_name_ru?: string;
      /**
       * Заголовок блока 'Отделочные материалы для двери' (анг)
       * @description Название секции покрытий
       */
      cover_title_name_eng?: string;
      /**
       * Заголовок блока 'Дверные ручки и замки' (рус)
       * @description Название секции дверных ручек и замков
       */
      handle_title_name_ru?: string;
      /**
       * Заголовок блока 'Дверные ручки и замки' (анг)
       * @description Название секции дверных ручек и замков
       */
      handle_title_name_eng?: string;
      /**
       * Заголовок блока 'Умные дверные замки' (рус)
       * @description Название секции замков
       */
      lock_title_name_ru?: string;
      /**
       * Заголовок блока 'Умные дверные замки' (анг)
       * @description Название секции замков
       */
      lock_title_name_eng?: string;
      /**
       * Изображение 'Допустимая высота двери'
       * Format: uri
       */
      hight_image?: string | null;
      /**
       * Заголовок блока 'Допустимая высота двери' (рус)
       * @description Заголовок секции "Допустимая высота двери"
       */
      hight_title_name_ru?: string;
      /**
       * Заголовок блока 'Допустимая высота двери' (анг)
       * @description Заголовок секции высота двери
       */
      hight_title_name_eng?: string;
      /**
       * Текст блока 'Допустимая высота двери' (рус)
       * @description Текст секции "Допустимая высота двери"
       */
      hight_description_ru?: string;
      /**
       * Текст блока 'Допустимая высота двери' (анг)
       * @description Текст секции высота двери
       */
      hight_description_eng?: string;
      /** Цвет подложки текста */
      hight_background?: string;
      /**
       * Изображение 'Фон перехода к коллекциям'
       * Format: uri
       */
      collections_background_image?: string | null;
      cover_images: readonly components["schemas"]["DoorPageCoverImage"][];
    };
    DoorPageCoverImage: {
      id: number;
      /**
       * Изображение
       * Format: uri
       */
      photo: string;
    };
    DoorSpecification: {
      /** Performance (рус) */
      rus_performance: string;
      /** Performance (анг) */
      eng_performance: string;
      /** Standard (рус) */
      rus_standard: string;
      /** Standard (анг) */
      eng_standard: string;
      /** Upon request (рус) */
      rus_upon_request: string;
      /** Upon request (анг) */
      eng_upon_request: string;
      /**
       * Изображение
       * Format: uri
       */
      image: string;
    };
    FilterRequest: {
      /** @default */
      subcategory_eng_name?: string;
      /** @default 0 */
      prefered_collection?: number;
      marker: components["schemas"]["MarkerEnum"];
      /**
       * Format: double
       * @default 0
       */
      lowest_cost?: number;
      /**
       * Format: double
       * @default 20000
       */
      highest_cost?: number;
      colours: components["schemas"]["ColoursEnum"][];
      collections: components["schemas"]["CollectionsEnum"][];
      order_by: components["schemas"]["OrderByEnum"];
      /** @default true */
      sale?: boolean;
      /** @default true */
      featured?: boolean;
    };
    HandlerLock: {
      id: number;
      /**
       * Изображение
       * Format: uri
       */
      image: string;
      /** Название (рус) */
      name_ru: string;
      /** Название (анг) */
      name_eng: string;
      /** Описание (рус) */
      ru_description?: string;
      /** Описание (анг) */
      eng_description?: string;
    };
    Image: {
      /**
       * Изображение
       * Format: uri
       */
      photo: string;
      /** Сделать главным */
      main_photo?: boolean;
    };
    Inspiration: {
      id: number;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      /** Описание изображения (анг) */
      description_eng?: string;
      /** Описание изображения (рус) */
      description_ru?: string;
      /**
       * Изображение
       * Format: uri
       */
      image: string;
      /**
       * Уменьшенное изображение
       * Format: uri
       */
      crop_image?: string | null;
      author: readonly components["schemas"]["Author"][];
      style: readonly components["schemas"]["InspirationStyle"][];
      room: readonly components["schemas"]["Room"][];
      building_type: readonly components["schemas"]["BuildingType"][];
      width: string;
      height: string;
      products_in: readonly components["schemas"]["ProductInInspiration"][];
      support_products_for: readonly components["schemas"]["SupportProductForInspiration"][];
    };
    InspirationFilterRequest: {
      authors: components["schemas"]["AuthorsEnum"][];
      building_type: components["schemas"]["BuildingTypeEnum"][];
      styles: components["schemas"]["StylesEnum"][];
      rooms: components["schemas"]["RoomsEnum"][];
      order_by: components["schemas"]["OrderByEnum"];
    };
    InspirationStyle: {
      id: number;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      count_inspirations: string;
    };
    "List-collections": {
      subcategory: components["schemas"]["Subcategories"];
      amount_of_pages: number;
      objects_on_page: components["schemas"]["Object"][];
    };
    List_subcategories: {
      category: components["schemas"]["Categories"];
      subcategories: components["schemas"]["Subcategories"][];
    };
    Lock: {
      id: number;
      /**
       * Изображение
       * Format: uri
       */
      image: string;
      /** Название (рус) */
      name_ru: string;
      /** Название (анг) */
      name_eng: string;
      /** Описание (рус) */
      ru_description?: string;
      /** Описание (анг) */
      eng_description?: string;
      /** Электрический замок */
      electro?: boolean;
      step_images: components["schemas"]["LockStepImage"][];
    };
    LockStepImage: {
      id: number;
      /** Название (рус) */
      name_ru: string;
      /** Название (анг) */
      name_eng: string;
      /**
       * Изображение
       * Format: uri
       */
      image: string;
      /** Описание (рус) */
      ru_description?: string;
      /** Описание (анг) */
      eng_description?: string;
      /** Молния */
      flash?: boolean;
      lock: number;
    };
    MainCatalog: {
      /**
       * PDF-файл
       * Format: uri
       */
      file?: string | null;
    };
    MainTax: {
      /**
       * Налог
       * Format: double
       */
      tax: number;
    };
    MainVideo: {
      /**
       * Видео
       * Format: uri
       */
      file?: string | null;
    };
    /**
     * @description * `ru` - ru
     * * `en` - en
     * @enum {string}
     */
    MarkerEnum: "ru" | "en";
    Object: components["schemas"]["ShowCollection"] | components["schemas"]["ColAbstract"];
    ObjsCollection: {
      id: number;
      /**
       * Цвет подложки
       * @description Цвет подложки, на которой будет отображен текст
       */
      background_color?: string;
      /**
       * Название (рус)
       * @description Название коллекции на русском языке
       */
      rus_name: string;
      /**
       * Описание (1) (рус)
       * @description Описнаие коллекции на русском языке (левый столбец)
       */
      rus_description?: string;
      /**
       * Заголовок (рус)
       * @description Заголовок перед описанием на русском языке
       */
      rus_title?: string;
      /**
       * Название (анг)
       * @description Название коллекции на английском языке
       */
      eng_name: string;
      /**
       * Описание (1) (анг)
       * @description Описнаие коллекции на английском языке (левый столбец)
       */
      eng_description?: string;
      /**
       * Заголовок (анг)
       * @description Заголовок перед описанием на английском языке
       */
      eng_title?: string;
      /**
       * Обложка
       * Format: uri
       * @description Обложка коллекции
       */
      banner: string;
      products: readonly components["schemas"]["PreviewAbstract"][];
      /**
       * Обложка (выбор экспертов)
       * Format: uri
       */
      featured_banner?: string | null;
    };
    /**
     * @description * `date` - date
     * * `cost` - cost
     * * `popularity` - popularity
     * * `none` - none
     * @enum {string}
     */
    OrderByEnum: "date" | "cost" | "popularity" | "none";
    PatchedFilterRequest: {
      /** @default */
      subcategory_eng_name?: string;
      /** @default 0 */
      prefered_collection?: number;
      marker?: components["schemas"]["MarkerEnum"];
      /**
       * Format: double
       * @default 0
       */
      lowest_cost?: number;
      /**
       * Format: double
       * @default 20000
       */
      highest_cost?: number;
      colours?: components["schemas"]["ColoursEnum"][];
      collections?: components["schemas"]["CollectionsEnum"][];
      order_by?: components["schemas"]["OrderByEnum"];
      /** @default true */
      sale?: boolean;
      /** @default true */
      featured?: boolean;
    };
    PreviewAbstract: {
      id: number;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      colored_products: readonly components["schemas"]["PreviewProduct"][];
    };
    PreviewDoor: {
      id: number;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      main_photo: components["schemas"]["DoorImage"];
      /**
       * Цена товара (руб)
       * Format: double
       */
      rub_cost?: number | null;
      /**
       * Цена товара (евро)
       * Format: double
       */
      euro_cost: number;
    };
    PreviewInspiration: {
      id: number;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      /**
       * Изображение
       * Format: uri
       */
      image: string;
      /**
       * Уменьшенное изображение
       * Format: uri
       */
      crop_image?: string | null;
    };
    PreviewProduct: {
      id: number;
      colour: components["schemas"]["Colour"];
      main_photo: components["schemas"]["Image"];
      /**
       * Стоимость (руб)
       * Format: double
       */
      rub_cost?: number | null;
      /**
       * Стоимость (евро)
       * Format: double
       */
      euro_cost: number;
    };
    Product: {
      id: number;
      id_code: string;
      rus_name: string;
      eng_name: string;
      /** Название (рус) */
      rus_title: string;
      /** Название (анг) */
      eng_title: string;
      /** Описание (рус) */
      rus_description?: string;
      /** Описание (анг) */
      eng_description?: string;
      /** Гарантии (ру) */
      guarantee_ru?: string;
      /** Гарантии (анг) */
      guarantee_eng?: string;
      /** Доставка (ру) */
      delivery_ru?: string;
      /** Доставка (анг) */
      delivery_eng?: string;
      /** Поддержка (ру) */
      support_ru?: string;
      /** Поддержка (анг) */
      support_eng?: string;
      /** Возврат (ру) */
      refund_ru?: string;
      /** Возврат (анг) */
      refund_eng?: string;
      /** Уход за товаром (рус) */
      rus_care?: string;
      /** Уход за товаром (анг) */
      eng_care?: string;
      /**
       * Стоимость (руб)
       * Format: double
       */
      rub_cost?: number | null;
      /**
       * Стоимость (евро)
       * Format: double
       */
      euro_cost: number;
      /**
       * Налог
       * Format: double
       */
      tax?: number | null;
      colour: components["schemas"]["Colour"];
      amount_of: number;
      product_specifications: readonly components["schemas"]["Specification"][];
      product_images: readonly components["schemas"]["Image"][];
      /** Наличие 3D-модели */
      flag_of_model?: boolean;
      /**
       * 3Д модель/ чертеж (рус)
       * Format: uri
       */
      drawing_ru?: string | null;
      /**
       * 3Д модель/ чертеж (анг)
       * Format: uri
       */
      drawing_eng?: string | null;
      /**
       * PDF файл (анг)
       * Format: uri
       */
      en_pdf?: string | null;
      /** Название PDF файла (анг) */
      en_pdf_name?: string | null;
      /**
       * PDF файл (рус)
       * Format: uri
       */
      ru_pdf?: string | null;
      /** Название PDF файла (рус) */
      ru_pdf_name?: string | null;
      en_pdf_size_field: string;
      ru_pdf_size_field: string;
      /** Format: uri */
      collection_file_ru?: string | null;
      /** Format: uri */
      collection_file_eng?: string | null;
    };
    ProductInInspiration: {
      abstract_product_preview: components["schemas"]["PreviewAbstract"];
      colored_product: components["schemas"]["PreviewProduct"];
      /** Format: double */
      x_coordinate: number;
      /** Format: double */
      y_coordinate: number;
    };
    RetrieveCollection: {
      id: number;
      /**
       * Название (рус)
       * @description Название коллекции на русском языке
       */
      rus_name: string;
      /**
       * Название (анг)
       * @description Название коллекции на английском языке
       */
      eng_name: string;
      /**
       * Заголовок (рус)
       * @description Заголовок перед описанием на русском языке
       */
      rus_title?: string;
      /**
       * Заголовок (анг)
       * @description Заголовок перед описанием на английском языке
       */
      eng_title?: string;
      /**
       * Описание (1) (рус)
       * @description Описнаие коллекции на русском языке (левый столбец)
       */
      rus_description?: string;
      /**
       * Описание (1) (анг)
       * @description Описнаие коллекции на английском языке (левый столбец)
       */
      eng_description?: string;
      /**
       * Описание (2) (рус)
       * @description Описнаие коллекции на русском языке (правый столбец)
       */
      rus_description_2?: string;
      /**
       * Описание (2) (анг)
       * @description Описнаие коллекции на английском языке (правый столбец)
       */
      eng_description_2?: string;
      /**
       * Сокращенное название (рус)
       * @description Сокращенное название на русском языке
       */
      rus_filter_name: string;
      /**
       * Сокращенное название (анг)
       * @description Сокращенное название на английском языке
       */
      eng_filter_name: string;
      /**
       * Год создания
       * @description Год создания коллекции
       */
      year?: number;
      /**
       * Цвет подложки
       * @description Цвет подложки, на которой будет отображен текст
       */
      background_color?: string;
      /**
       * Обложка
       * Format: uri
       * @description Обложка коллекции
       */
      banner: string;
      /** Выбор экспертов */
      featured?: boolean;
      /**
       * Обложка (выбор экспертов)
       * Format: uri
       */
      featured_banner?: string | null;
      categories: readonly components["schemas"]["Subcategories"][];
    };
    Room: {
      id: number;
      /** Название (рус) */
      rus_name: string;
      /** Название (анг) */
      eng_name: string;
      count_inspirations: string;
    };
    /**
     * @description * `6` - 6
     * @enum {integer}
     */
    RoomsEnum: 6;
    ShowCollection: {
      /** @default true */
      collection_type?: boolean;
      id: number;
      /**
       * Название (рус)
       * @description Название коллекции на русском языке
       */
      rus_name: string;
      /**
       * Сокращенное название (рус)
       * @description Сокращенное название на русском языке
       */
      rus_filter_name: string;
      /**
       * Название (анг)
       * @description Название коллекции на английском языке
       */
      eng_name: string;
      /**
       * Сокращенное название (анг)
       * @description Сокращенное название на английском языке
       */
      eng_filter_name: string;
      /**
       * Обложка
       * Format: uri
       * @description Обложка коллекции
       */
      banner: string;
    };
    Specification: {
      /** Название (рус) */
      rus_name: string;
      /** Значение (рус) */
      rus_value: string;
      /** Название (анг) */
      eng_name: string;
      /** Значение (анг) */
      eng_value: string;
    };
    /**
     * @description * `7` - 7
     * * `8` - 8
     * @enum {integer}
     */
    StylesEnum: 7 | 8;
    SubcatalogSertializer: {
      id: number;
      /** Название (рус) */
      ru_name: string;
      /** Название (анг) */
      eng_name: string;
      /**
       * PDF (рус)
       * Format: uri
       */
      pdf_ru: string;
      /**
       * PDF (анг)
       * Format: uri
       */
      pdf_eng: string;
      /**
       * Обложка (анг)
       * Format: uri
       */
      banner_eng?: string | null;
      /**
       * Обложка (рус)
       * Format: uri
       */
      banner_ru?: string | null;
    };
    Subcategories: {
      id: number;
      /**
       * Название (рус)
       * @description Название подкатегории на русском языке
       */
      rus_name: string;
      /**
       * Название (анг)
       * @description Название подкатегории на английском языке
       */
      eng_name: string;
      /**
       * Обложка
       * Format: uri
       * @description Обложка подкатегории
       */
      banner: string;
      product_counter: number;
    };
    SupportProductForInspiration: {
      product: components["schemas"]["PreviewAbstract"];
    };
    UploadOrderPDFRequest: {
      base64_data: string;
      /** @default */
      first_name?: string;
      /** @default */
      second_name?: string;
      /** @default */
      patronymic?: string;
      /** @default */
      delivery_type?: string;
      /** @default */
      country?: string;
      /** @default */
      street_name?: string;
      /** @default */
      zip_code?: string;
      /** @default */
      comment?: string;
      /** @default */
      city?: string;
      /** @default */
      email?: string;
      /** @default */
      phone?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  catalogs_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Catalog"][];
        };
      };
    };
  };
  categories_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Categories"][];
        };
      };
    };
  };
  categories_amount_of_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["CountCategory"];
        };
      };
    };
  };
  categories_list_subcategories_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoriesRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["CategoriesRequest"];
        "multipart/form-data": components["schemas"]["CategoriesRequest"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["List_subcategories"];
        };
      };
    };
  };
  collections_retrieve: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this Коллекция товаров. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["RetrieveCollection"];
        };
      };
    };
  };
  collections_amount_of_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["CountCollection"];
        };
      };
    };
  };
  collections_featured_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ObjsCollection"];
        };
      };
    };
  };
  collections_list_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["RetrieveCollection"][];
        };
      };
    };
  };
  door_page_covers_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Cover"][];
        };
      };
    };
  };
  door_page_door_page_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DoorPage"];
        };
      };
    };
  };
  door_page_doors_combinations_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DoorCombinations"][];
        };
      };
    };
  };
  door_page_doors_covers_combinations_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DoorCoverCombinationSerialiser"][];
        };
      };
    };
  };
  door_page_handler_locks_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["HandlerLock"][];
        };
      };
    };
  };
  door_page_locks_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Lock"][];
        };
      };
    };
  };
  door_collections_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DoorCollections"];
        };
      };
    };
  };
  doors_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PreviewDoor"][];
        };
      };
    };
  };
  doors_retrieve: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this Дверь (товар). */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Door"];
        };
      };
    };
  };
  inspiration_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PreviewInspiration"][];
        };
      };
    };
  };
  inspiration_retrieve: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this Вдохновение. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Inspiration"];
        };
      };
    };
  };
  inspiration_count_pages_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["InspirationFilterRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["InspirationFilterRequest"];
        "multipart/form-data": components["schemas"]["InspirationFilterRequest"];
      };
    };
    responses: {
      amount_of_pages: {
        content: {
          "application/json": number;
        };
      };
      amount_of_images: {
        content: {
          "application/json": number;
        };
      };
    };
  };
  inspiration_filter_list_list: {
    responses: {
      styles: {
        content: {
          "application/json": components["schemas"]["InspirationStyle"];
        };
      };
      authors: {
        content: {
          "application/json": components["schemas"]["Author"];
        };
      };
      building_types: {
        content: {
          "application/json": components["schemas"]["BuildingType"];
        };
      };
      rooms: {
        content: {
          "application/json": components["schemas"]["Room"];
        };
      };
    };
  };
  inspiration_next_retrieve: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Inspiration"];
        };
      };
    };
  };
  inspiration_open_retrieve: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      ok: {
        content: {
          "application/json": boolean;
        };
      };
    };
  };
  inspiration_page_create: {
    parameters: {
      path: {
        pag_num: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["InspirationFilterRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["InspirationFilterRequest"];
        "multipart/form-data": components["schemas"]["InspirationFilterRequest"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PreviewInspiration"][];
        };
      };
    };
  };
  inspiration_prev_retrieve: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Inspiration"];
        };
      };
    };
  };
  main_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Subcategories"][];
        };
      };
    };
  };
  main_catalog_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["MainCatalog"];
        };
      };
    };
  };
  main_tax_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["MainTax"];
        };
      };
    };
  };
  main_video_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["MainVideo"];
        };
      };
    };
  };
  new_subcategory_amount_of_pages_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FilterRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["FilterRequest"];
        "multipart/form-data": components["schemas"]["FilterRequest"];
      };
    };
    responses: {
      amount_of_pages: {
        content: {
          "application/json": number;
        };
      };
      amount_of_products: {
        content: {
          "application/json": number;
        };
      };
      rus_max_money: {
        content: {
          "application/json": number;
        };
      };
      eng_max_money: {
        content: {
          "application/json": number;
        };
      };
      rus_min_money: {
        content: {
          "application/json": number;
        };
      };
      eng_min_money: {
        content: {
          "application/json": number;
        };
      };
    };
  };
  new_subcategory_amount_of_pages_mobile_create: {
    responses: {
      amount_of_pages: {
        content: {
          "application/json": number;
        };
      };
      amount_of_products: {
        content: {
          "application/json": number;
        };
      };
      rus_max_money: {
        content: {
          "application/json": number;
        };
      };
      eng_max_money: {
        content: {
          "application/json": number;
        };
      };
    };
  };
  new_subcategory_color_count_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["FilterRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["FilterRequest"];
        "multipart/form-data": components["schemas"]["FilterRequest"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["CountCIS"];
        };
      };
    };
  };
  new_subcategory_page_mobile_partial_update: {
    parameters: {
      path: {
        pag_num: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedFilterRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedFilterRequest"];
        "multipart/form-data": components["schemas"]["PatchedFilterRequest"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["List-collections"];
        };
      };
    };
  };
  new_subcategory_page_partial_update: {
    parameters: {
      path: {
        pag_num: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedFilterRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedFilterRequest"];
        "multipart/form-data": components["schemas"]["PatchedFilterRequest"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["List-collections"];
        };
      };
    };
  };
  product_retrieve: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this Товар (абстрактный). */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AbstractProduct"];
        };
      };
    };
  };
  product_related_objs_list: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this Товар (абстрактный). */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PreviewAbstract"][];
        };
      };
    };
  };
  product_same_collection_retrieve: {
    parameters: {
      path: {
        /** @description A unique integer value identifying this Товар (абстрактный). */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["ObjsCollection"];
        };
      };
    };
  };
  product_amount_of_products_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": number;
        };
      };
    };
  };
  product_count_colours_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["CountColour"][];
        };
      };
    };
  };
  product_list_colours_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Colour"][];
        };
      };
    };
  };
  product_new_products_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PreviewAbstract"][];
        };
      };
    };
  };
  upload_order_pdf_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UploadOrderPDFRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UploadOrderPDFRequest"];
        "multipart/form-data": components["schemas"]["UploadOrderPDFRequest"];
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
}
